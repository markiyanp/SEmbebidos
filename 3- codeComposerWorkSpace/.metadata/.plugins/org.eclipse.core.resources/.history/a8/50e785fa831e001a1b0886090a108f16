#include <stdbool.h>
#include <stdint.h>
#include "inc/hw_memmap.h"
#include "inc/hw_types.h"
#include "inc/hw_gpio.h"
#include "driverlib/sysctl.h"
#include "driverlib/gpio.h"
#include "driverlib/rom.h"
#include "drivers/buttons.h"
#include "utils/uartstdio.h"
#include "switch_task.h"
#include "led_task.h"
#include "priorities.h"
#include "FreeRTOS.h"
#include "task.h"
#include "queue.h"
#include "semphr.h"
#include "esp/esp_uart.h"
#include "at/at.h"
#include "driverlib/uart.h"
#include <string.h>

//*****************************************************************************
//
// The stack size for the display task.
//
//*****************************************************************************
#define ESPLOGICTASKSTACKSIZE        128         // Stack size in words

extern char ReceivedData[512];
extern bool configurationRunning;
xQueueHandle g_pLogicTasksQueue;
xQueueHandle g_pEspRcvQueue;


static void LogicTask(void *pvParameters)
{
    while(1){
        if(configurationRunning){
            xQueue
        }
    }

}

//*****************************************************************************
//
// Initializes the ESP RCV task.
//
//*****************************************************************************
uint32_t LogicTaskInit(void)
{
    if (xTaskCreate(LogicTask, (const portCHAR *)"LOGIC", ESPLOGICTASKSTACKSIZE, NULL,
            tskIDLE_PRIORITY + PRIORITY_LOGIC_TASK, NULL) != pdTRUE)
    {
        return (1);
    }
    return (0);
}
